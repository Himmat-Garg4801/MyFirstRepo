class Library:
    def __init__(self, books):
        self.books = books
        self.borrowed = {}

    def display_books(self):
        print("\nAvailable Books:")
        for book in self.books:
            if book not in self.borrowed:
                print(f"- {book}")
        print()

    def borrow_book(self, book_name, user_name):
        if book_name in self.books and book_name not in self.borrowed:
            self.borrowed[book_name] = user_name
            print(f"{user_name} has borrowed '{book_name}'.")
        elif book_name in self.borrowed:
            print(f"Sorry, '{book_name}' is already borrowed by {self.borrowed[book_name]}.")
        else:
            print(f"Sorry, '{book_name}' is not available in our library.")

    def return_book(self, book_name, user_name):
        if self.borrowed.get(book_name) == user_name:
            del self.borrowed[book_name]
            print(f"{user_name} has returned '{book_name}'.")
        else:
            print("Return failed: Either the book wasn't borrowed or wrong user.")

# Main driver
def main():
    my_library = Library([
        "Python Basics",
        "Data Structures and Algorithms",
        "Machine Learning 101",
        "C++ for Beginners"
    ])

    while True:
        print("\n--- Library Menu ---")
        print("1. Display available books")
        print("2. Borrow a book")
        print("3. Return a book")
        print("4. Exit")

        choice = input("Enter your choice (1-4): ")

        if choice == '1':
            my_library.display_books()

        elif choice == '2':
            book = input("Enter the book name: ")
            user = input("Enter your name: ")
            my_library.borrow_book(book, user)

        elif choice == '3':
            book = input("Enter the book name: ")
            user = input("Enter your name: ")
            my_library.return_book(book, user)

        elif choice == '4':
            print("Thank you for using the library!")
            break

        else:
            print("Invalid choice. Try again.")

if __name__ == "__main__":
    main()
